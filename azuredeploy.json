{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "Name of Azure Web App"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "metadata": {
        "description": "Name of new or existing App Service Plan"
      }
    },
    "siteLocation": {
      "type": "string",
      "defaultValue": "japaneast",
      "metadata": {
        "description": "Name of the Location (eg: West Europe)"
      }
    },
    "storageName":{
      "type":"string",
      "metadata": {
        "description":"Name of your Storage Account"
      }
    },
    "storageAccountType":{
      "type":"string",
      "allowedValues":[
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS"
      ],
      "metadata":{
        "description": "Type of storage account"
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/ToruMakabe/AZChatOpsSample.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    },
    "SUBSCRIPTION_ID" : {
      "type": "string",
      "metadata": {
        "description": "Your Azure subscription ID"
      }
    },
    "TENANT_ID" : {
      "type": "string",
      "metadata": {
        "description": "Your Azure AD tenant ID (used for authentication)."
      }
    },
    "CLIENT_ID" : {
      "type": "string",
      "metadata": {
        "description": "Your Azure AD client ID (used for authentication)."
      }
    },
    "CLIENT_SECRET" : {
      "type": "securestring",
      "metadata": {
        "description": "Your Azure AD client secret or service principal password (used for authentication)."
      }
    },
    "AUTOMATION_RESOURCE_GROUP" : {
      "type": "string",
      "metadata": {
        "description": "The name of the Resource Group in which your Automation account lives."
      }
    },
    "AUTOMATION_ACCOUNT" : {
      "type": "string",
      "metadata": {
        "description": "The name of the Automation account in which you want to execute Runbooks."
      }
    },
    "SLACK_CHANNEL" : {
      "type": "string",
      "metadata": {
        "description": "The Slack channel to which updates of the run will be posted."
      }
    },
    "SLACK_INCOMING_WEBHOOK_URL" : {
      "type": "securestring",
      "metadata": {
        "description": "URL of your Incoming Webhook."
      }
    }
  },
  "variables": {
  },
  "resources": [
    {
      "apiVersion":"2015-06-15",
      "type":"Microsoft.Storage/storageAccounts",
      "name":"[parameters('storageName')]",
      "location":"[parameters('siteLocation')]",
      "properties":{
        "accountType":"[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-04-01",
      "name": "[parameters('appServicePlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('siteLocation')]",
      "properties": {
        "name": "[parameters('appServicePlanName')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[parameters('functionAppName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('siteLocation')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
      ],
      "properties": {
        "name": "[parameters('functionAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2016-03-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites/', parameters('functionAppName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        },
        {
          "apiVersion": "2016-03-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]"
          ],
          "properties": {
            "SUBSCRIPTION_ID": "[parameters('SUBSCRIPTION_ID')]",
            "TENANT_ID": "[parameters('TENANT_ID')]",
            "CLIENT_ID": "[parameters('CLIENT_ID')]",
            "CLIENT_SECRET": "[parameters('CLIENT_SECRET')]",
            "AUTOMATION_RESOURCE_GROUP": "[parameters('AUTOMATION_RESOURCE_GROUP')]",
            "AUTOMATION_ACCOUNT": "[parameters('AUTOMATION_ACCOUNT')]",
            "STORAGE_ACCOUNT": "[parameters('storageName')]",
            "STORAGE_ACCOUNT_KEY": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2015-06-15').key1]",
            "SLACK_CHANNEL": "[parameters('SLACK_CHANNEL')]",
            "SLACK_INCOMING_WEBHOOK_URL": "[parameters('SLACK_INCOMING_WEBHOOK_URL')]",
            "WEBSITE_NODE_DEFAULT_VERSION": "6.5.0",
            "FUNCTIONS_EXTENSION_VERSION": "latest"
          }
         }
      ]
    }
  ],
  "outputs": {
     "siteUri": {
       "type": "string",
       "value": "[concat('https://',reference(resourceId('Microsoft.Web/sites', parameters('functionAppName'))).hostNames[0])]"
     }
  }
}
